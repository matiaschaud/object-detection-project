# PIPELINE DEFINITION
# Name: heavy-resource-pipeline
# Description: Pipeline que demuestra la configuraciÃ³n de recursos.
components:
  comp-preprocess-data:
    executorLabel: exec-preprocess-data
    outputDefinitions:
      parameters:
        data:
          parameterType: STRING
  comp-train-model:
    executorLabel: exec-train-model
    inputDefinitions:
      parameters:
        data:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-preprocess-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - preprocess_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef preprocess_data() -> NamedTuple('Outputs', [('data', str)]):\n\
          \    \"\"\"\n    Componente que simula la preparaci\xF3n de datos.\n   \
          \ \"\"\"\n    import time\n    print(\"Preprocesando datos...\")\n    time.sleep(5)\n\
          \    return ('Datos procesados',)\n\n"
        image: python:3.9
    exec-train-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model(data: str) -> str:\n    \"\"\"\n    Componente que\
          \ simula el entrenamiento de un modelo.\n    \"\"\"\n    print(f\"Iniciando\
          \ entrenamiento con {data}...\")\n    return \"Modelo entrenado\"\n\n"
        image: python:3.9
        resources:
          cpuLimit: 4.0
          cpuRequest: 2.0
          memoryLimit: 8.589934592
          memoryRequest: 4.294967296
          resourceCpuLimit: '4'
          resourceCpuRequest: '2'
          resourceMemoryLimit: 8Gi
          resourceMemoryRequest: 4Gi
pipelineInfo:
  description: "Pipeline que demuestra la configuraci\xF3n de recursos."
  name: heavy-resource-pipeline
root:
  dag:
    tasks:
      preprocess-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-preprocess-data
        taskInfo:
          name: preprocess-data
      train-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model
        dependentTasks:
        - preprocess-data
        inputs:
          parameters:
            data:
              taskOutputParameter:
                outputParameterKey: data
                producerTask: preprocess-data
        taskInfo:
          name: train-model
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.2
